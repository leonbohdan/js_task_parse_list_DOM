{"version":3,"sources":["scripts/main.js"],"names":["listOfPeople","document","querySelectorAll","changedList","querySelector","sortList","people","sort","first","next","dataset","salary","replace","append","getEmployees","map","person","name","innerText"],"mappings":";AAAA,aAwBA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,KAAA,GAAA,GAAA,OAAA,sBAAA,CAAA,IAAA,EAAA,OAAA,sBAAA,GAAA,IAAA,EAAA,EAAA,OAAA,SAAA,GAAA,OAAA,OAAA,yBAAA,EAAA,GAAA,cAAA,EAAA,KAAA,MAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,CAAA,IAAA,EAAA,MAAA,UAAA,GAAA,UAAA,GAAA,GAAA,EAAA,EAAA,EAAA,OAAA,IAAA,GAAA,QAAA,SAAA,GAAA,EAAA,EAAA,EAAA,EAAA,MAAA,OAAA,0BAAA,OAAA,iBAAA,EAAA,OAAA,0BAAA,IAAA,EAAA,OAAA,IAAA,QAAA,SAAA,GAAA,OAAA,eAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,MAAA,OAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAtBA,IAAMA,EAAmBC,EAAAA,SAASC,iBAAiB,OAE7CC,EAAcF,SAASG,cAAc,MAE3C,SAASC,EAASC,GAChBA,EAAOC,KACL,SAACC,EAAOC,GACN,OAACA,EAAKC,QAAQC,OAAOC,QAAQ,WAAY,KACtCJ,EAAME,QAAQC,OAAOC,QAAQ,WAAY,MAGhDT,EAAYU,OAAZV,MAAAA,EAAsBG,EAAAA,IAGxB,SAASQ,EAAaR,GACbA,OAAAA,EAAOS,IAAI,SAAAC,GAAM,OAAA,EAAA,CACtBC,KAAMD,EAAOE,WACVF,EAAON,WAIdL,EAASL,GACTc,EAAad","file":"main.23f677a0.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst listOfPeople = [...document.querySelectorAll('li')];\n\nconst changedList = document.querySelector('ul');\n\nfunction sortList(people) {\n  people.sort(\n    (first, next) =>\n      +next.dataset.salary.replace(/[^0-9]/gi, '')\n      - +first.dataset.salary.replace(/[^0-9]/gi, '')\n  );\n\n  changedList.append(...people);\n}\n\nfunction getEmployees(people) {\n  return people.map(person => ({\n    name: person.innerText,\n    ...person.dataset,\n  }));\n}\n\nsortList(listOfPeople);\ngetEmployees(listOfPeople);\n"]}